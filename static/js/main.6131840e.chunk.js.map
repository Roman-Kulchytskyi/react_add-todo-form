{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","initialTodos","todosFromServer","usersFromServer","find","userFromServer","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","newTodoId","Math","max","action","method","onSubmit","event","preventDefault","usersArr","trimmedTitle","length","trim","newTodo","currentTodos","addTodo","htmlFor","placeholder","type","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6131840e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/users';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))\n    }\n  </section>\n);\n","import React, { FormEvent, useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todos';\nimport { User } from './types/users';\n\nconst initialTodos = todosFromServer.map(todo => {\n  const user = usersFromServer.find(\n    userFromServer => userFromServer.id === todo.userId,\n  );\n\n  return { ...todo, user };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const newTodoId = Math.max(...todosFromServer.map(todo => todo.id));\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setHasUserIdError(false);\n  };\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const findUser = (usersArr: User[]) => {\n    const currentUser = usersArr.find(user => user.id\n      === userId);\n\n    return currentUser;\n  };\n\n  const clear = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    let trimmedTitle = title;\n\n    if (title.length !== title.trim().length) {\n      trimmedTitle = title.trim();\n    }\n\n    setHasTitleError(!trimmedTitle);\n    setHasUserIdError(userId === 0);\n\n    if (!trimmedTitle || userId === 0) {\n      return;\n    }\n\n    const newTodo = {\n      user: findUser(usersFromServer),\n      id: newTodoId + 1,\n      title,\n      completed: false,\n      userId,\n    };\n\n    addTodo(newTodo);\n\n    clear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            id=\"user\"\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" key=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(userFromServer => (\n              <option value={userFromServer.id} key={userFromServer.id}>\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}